spring.application.name=SalesManagementBackend

# Database Configuration - Environment Variable Based for Secure Deployment
# Supports both local development and cloud deployment (Render.com, Docker, etc.)
spring.datasource.url=${DATABASE_URL:jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:sales_management}?useSSL=${DB_SSL:true}&requireSSL=${DB_REQUIRE_SSL:false}&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=false&useUnicode=true&characterEncoding=utf8&autoReconnect=true&failOverReadOnly=false&maxReconnects=10}
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:}

# Connection Pool Configuration for Production
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT:300000}
spring.datasource.hikari.connection-timeout=${DB_POOL_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.max-lifetime=${DB_POOL_MAX_LIFETIME:1200000}
spring.datasource.hikari.leak-detection-threshold=${DB_POOL_LEAK_DETECTION:60000}

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=${DB_DDL_AUTO:update}
spring.jpa.show-sql=${DB_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${DB_FORMAT_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.jdbc.batch_size=${DB_BATCH_SIZE:20}
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.open-in-view=false

# H2 Configuration (for local development only)
# Uncomment these and comment MySQL config above for local H2 development
# spring.datasource.url=jdbc:h2:mem:devdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console

# Server Configuration - Environment Variable Based
server.port=${PORT:8081}
server.servlet.context-path=${CONTEXT_PATH:/}
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Logging Configuration - Environment Variable Based
logging.level.com.hamza.salesmanagementbackend=${LOG_LEVEL:INFO}
logging.level.org.springframework.web.servlet.DispatcherServlet=${LOG_LEVEL_WEB:WARN}
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=${LOG_LEVEL_WEB:WARN}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOG_LEVEL_SQL:WARN}
logging.pattern.console=${LOG_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss} - %msg%n}
logging.pattern.file=${LOG_PATTERN_FILE:%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n}

# JWT Configuration - Secure Environment Variables
jwt.secret=${JWT_SECRET:bXlTZWNyZXRLZXkxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkw}
jwt.expiration=${JWT_EXPIRATION:86400000}

# CORS Configuration - Environment Variable Based for Security
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
cors.max-age=${CORS_MAX_AGE:3600}

# Static Resources Configuration
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.add-mappings=true

# Request Logging
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=DEBUG

# Update System Configuration
app.updates.storage-path=${UPDATE_STORAGE_PATH:./versions}
app.updates.max-file-size=${UPDATE_MAX_FILE_SIZE:524288000}
app.updates.allowed-extensions=${UPDATE_ALLOWED_EXTENSIONS:jar}
app.updates.enable-resumable-downloads=${UPDATE_ENABLE_RESUMABLE:true}
app.updates.cleanup-orphaned-files=${UPDATE_CLEANUP_ORPHANED:true}
app.updates.websocket.heartbeat-interval=${UPDATE_HEARTBEAT_INTERVAL:30000}
app.updates.websocket.connection-timeout=${UPDATE_CONNECTION_TIMEOUT:300000}
app.updates.security.admin-role=${UPDATE_ADMIN_ROLE:ADMIN}
app.updates.security.rate-limit=${UPDATE_RATE_LIMIT:10}

# JAR File Validation Configuration
app.updates.jar-validation.strict-mime-type=${UPDATE_JAR_STRICT_MIME:true}
app.updates.jar-validation.require-manifest=${UPDATE_JAR_REQUIRE_MANIFEST:false}
app.updates.jar-validation.max-entries=${UPDATE_JAR_MAX_ENTRIES:10000}
app.updates.jar-validation.max-manifest-size=${UPDATE_JAR_MAX_MANIFEST_SIZE:65536}

# File Upload Configuration
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB
